"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79],{311:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"datepicker","title":"DatePicker","description":"The DatePicker component is a versatile, responsive UI element designed for effortless date and time selection. It provides an intuitive calendar interface with support for:","source":"@site/docs/datepicker.mdx","sourceDirName":".","slug":"/datepicker","permalink":"/react-daisyui-timetools/datepicker","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/datepicker.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Intro","permalink":"/react-daisyui-timetools/"},"next":{"title":"TimePicker","permalink":"/react-daisyui-timetools/timepicker"}}');var t=i(5105),n=i(8345),r=i(5517);const c={sidebar_position:2},l="DatePicker",a={},o=[{value:"Usage",id:"usage",level:2},{value:"Light (default)",id:"light-default",level:3},{value:"Year Pickers",id:"year-pickers",level:3},{value:"Props",id:"props",level:2}];function h(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"datepicker",children:"DatePicker"})}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"DatePicker"})," component is a versatile, responsive UI element designed for effortless date and time selection. It provides an intuitive calendar interface with support for:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Date Range Control:"})," Limit user selection via ",(0,t.jsx)(s.code,{children:"minDate"})," and ",(0,t.jsx)(s.code,{children:"maxDate"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Localization:"})," Format dates to various locales using the ",(0,t.jsx)(s.code,{children:"locale"})," prop."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Custom Navigation:"})," Easily customize navigation controls using ",(0,t.jsx)(s.code,{children:"forwardIcon"})," and ",(0,t.jsx)(s.code,{children:"backwardIcon"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Time Integration:"})," Optionally incorporate time selection through the ",(0,t.jsx)(s.code,{children:"timeModule"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Built with accessibility in mind, and leveraging DasiyUI and Tailwind CSS, this component ensures a modern, mobile-first experience across all devices."}),"\n",(0,t.jsx)(s.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:'import DatePicker from "react-daisyui-timetools"\n\n<DatePicker value="2025-01-01 12:00" onChange={() => {}} weekStart="sunday" />\n'})}),"\n",(0,t.jsx)(s.h3,{id:"light-default",children:"Light (default)"}),"\n",(0,t.jsx)("div",{"data-theme":"light",className:"rounded-2xl w-48",style:{width:"390px"},children:(0,t.jsx)(r.lr,{value:"2025-01-01 12:00",onChange:()=>{},weekStart:"sunday"})}),"\n",(0,t.jsx)(s.h3,{id:"year-pickers",children:"Year Pickers"}),"\n",(0,t.jsxs)(s.p,{children:["use the ",(0,t.jsx)(s.code,{children:"pickYear"})," prop to show a year picker.\nrange of years is set by ",(0,t.jsx)(s.code,{children:"minDate"})," and ",(0,t.jsx)(s.code,{children:"maxDate"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-tsx",children:'import DatePicker from "react-daisyui-timetools"\n\n<DatePicker value="2025-01-01 12:00" onChange={() => {}} weekStart="sunday" pickYear />\n'})}),"\n",(0,t.jsx)("div",{"data-theme":"dark",className:"rounded-2xl w-48",style:{width:"390px"},children:(0,t.jsx)(r.lr,{value:"2025-01-01 12:00",minDate:"1996-01-01",maxDate:"2025-12-31",onChange:()=>{},weekStart:"sunday",pickYear:!0})}),"\n",(0,t.jsx)(s.h2,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Prop"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"maxDate"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"The maximum selectable date. Limits selection to dates on or before this value."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"minDate"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"The minimum selectable date. Limits selection to dates on or after this value."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"value"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:"The current selected date/time value."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"onChange"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"(value: string) => void"})}),(0,t.jsx)(s.td,{children:"Callback invoked when the date/time value changes, passing the updated value as a string."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"locale"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"string"})}),(0,t.jsx)(s.td,{children:'Specifies the locale for date formatting and calendar display (e.g., "en-US").'})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"placeholder"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Placeholder text in the input field when no date is selected."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"size"})}),(0,t.jsx)(s.td,{children:'`"xs"'}),(0,t.jsx)(s.td,{children:'"sm"'})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"forwardIcon"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"React.ReactNode"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Custom element used as the forward navigation control (e.g., to move to the next month)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"backwardIcon"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"React.ReactNode"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Custom element used as the backward navigation control (e.g., to move to the previous month)."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"timeModule"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"React.ReactNode"})," (optional)"]}),(0,t.jsx)(s.td,{children:"An optional UI section for selecting or displaying time alongside the date."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"calendarIcon"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"React.ReactNode | null"})," (optional)"]}),(0,t.jsxs)(s.td,{children:["Icon used to trigger the calendar dropdown. Use ",(0,t.jsx)(s.code,{children:"null"})," to disable it."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"className"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Additional CSS classes for the outer container of the DatePicker."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"inputClassName"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Additional CSS classes for styling the input element itself."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"calendarClassName"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"string"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Additional CSS classes for styling the calendar popup component."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"open"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"boolean"})," (optional)"]}),(0,t.jsxs)(s.td,{children:["Controls whether the calendar popup is explicitly open (",(0,t.jsx)(s.code,{children:"true"}),") or closed (",(0,t.jsx)(s.code,{children:"false"}),")."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"weekStart"})}),(0,t.jsx)(s.td,{children:'`"monday"'}),(0,t.jsx)(s.td,{children:'"sunday"` (optional)'})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"pickYear"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"boolean"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Controls whether the year picker is shown."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"pickMonth"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"boolean"})," (optional)"]}),(0,t.jsx)(s.td,{children:"Controls whether the month picker is shown."})]})]})]}),"\n",(0,t.jsx)(s.p,{children:"|"})]})}function x(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);